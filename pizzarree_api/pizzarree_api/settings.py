"""
Django settings for pizzarree_api project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import secrets
import sys
from ast import literal_eval
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
PROJECT_NAME = os.getenv('DJANGO_PROJECT_NAME', 'Pizzarree Shop')
BASE_DIR = Path(__file__).resolve().parent.parent
TESTING = sys.argv[1:2] == ['test']
FRONTEND_URL = os.getenv('DJANGO_FRONTEND_URL', 'https://pizzarree.net')
API_WEBHOOK_REDIRECT_EXTENSION = os.getenv('DJANGO_API_WEBHOOK_REDIRECT_EXTENSION', 'done')
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', secrets.token_urlsafe(38))
# GEOIP_PATH = os.getenv('DJANGO_GEOIP_PATH', os.path.join(BASE_DIR, '../GeoLite'))
DEBUG = bool(literal_eval(os.getenv('DJANGO_DEBUG', '1')))
ADMIN_SITE_PATH = os.getenv('DJANGO_ADMIN_SITE_PATH', 'admin')
SUPPORT_MAIL = "support@pizzarree.net"
AUTH_USER_MODEL = "accounts.User"

DEFAULT_FROM_EMAIL = "postmaster@amdrs.link"

DOMAIN = os.getenv('DJANGO_DOMAIN', 'pizzarree.net')
TRUSTED_HOSTS = ['.%s' % DOMAIN, DOMAIN, 'localhost', '127.0.0.1', 'web']
ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS').split(',') if os.getenv('DJANGO_ALLOWED_HOSTS') else TRUSTED_HOSTS

FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755
FILE_UPLOAD_PERMISSIONS = 0o644

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('DJANGO_EMAIL_HOST', 'smtp.mailtrap.io')
EMAIL_PORT = os.getenv('DJANGO_EMAIL_PORT', '587')
EMAIL_HOST_USER = os.getenv('DJANGO_EMAIL_HOST_USER', 'a571812ba39b6d')
EMAIL_HOST_PASSWORD = os.getenv('DJANGO_EMAIL_HOST_PASSWORD', 'ee0e4489a103b8')


# EMAIL_USE_TLS = bool(literal_eval(os.getenv('DJANGO_EMAIL_USE_TLS', '0')))
# EMAIL_USE_SSL = bool(literal_eval(os.getenv('DJANGO_EMAIL_USE_SSL', '0')))

SECURE_HSTS_INCLUDE_SUBDOMAINS = not DEBUG
SECURE_HSTS_PRELOAD = not DEBUG
SECURE_HSTS_SECONDS = 3600 # restrict access only via https
# # SECURE_SSL_REDIRECT = not DEBUG # handled by haproxy
SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG
SECURE_REFERRER_POLICY = ['same-origin']
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SITE_ID = 1
ADMINS = [('Postmaster', 'ahbox@outlook.com'), ]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'taggit',
    'accounts',
    'shop',
    'django_phonenumbers',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'django_filters',
    'coverage'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
APPEND_SLASH = True
ROOT_URLCONF = 'pizzarree_api.urls'
STATIC_URL = '/static/' #alias for static_root
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "dist")
# ]
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = '/media/'

TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR, os.path.join(BASE_DIR, 'dist')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pizzarree_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
# if TESTING:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3/db.sqlite3',
    },
}
# else:
#     DATABASES = {
#         'default': {
#             "ENGINE": "django.db.backends.postgresql",
#             'NAME': os.getenv('DJANGO_DATABASE_NAME', 'pizzarree_db'),
#             'USER': os.getenv('DJANGO_DATABASE_USER', 'pizzarree'),
#             'PASSWORD': os.getenv('DJANGO_DATABASE_PASSWORD', 'pizzarree_pass'),
#             'HOST': os.getenv('DJANGO_DATABASE_HOST', 'pizzarree_db'),
#             'PORT': os.getenv('DJANGO_DATABASE_PORT', 5432),
#         }
#     }

AUTHENTICATION_BACKENDS = [
    'accounts.authentication.EmailAuthBackend',
    'accounts.authentication.PhoneAuthBackend',
    'accounts.authentication.UsernameAuthBackend'
]
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'common',
    'access-control-allow-origin',
    'access-control-allow-credentials',

)
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = DEBUG

# CORS_ALLOWED_ORIGINS = os.environ.get('DJANGO_CORS_ALLOWED_ORIGINS', "http://localhost:8080").split(',')
# CORS_ALLOWED_ORIGIN_REGEXES = [fr"{os.environ.get('DJANGO_CORS_ALLOWED_ORIGIN_REGEXES', '*')}"]

CSRF_TRUSTED_ORIGINS = os.environ.get('DJANGO_CORS_ALLOWED_ORIGINS', "http://localhost:8080,https://localhost:8000").split(',')
CORS_ALLOWED_ORIGINS = CSRF_TRUSTED_ORIGINS
# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

GRAPH_MODELS = {
  'all_applications': True,
  'group_models': True,
}

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES' : ('rest_framework.renderers.JSONRenderer',),
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.DjangoModelPermissions',
        'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 20,
    # 'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
    # 'TEST_REQUEST_DEFAULT_FORMAT': 'json'
}
CART_SESSION_ID = 'cart'

STRIPE_API_KEY = os.getenv('DJANGO_STRIPE_API_SECRET', '')
STRIPE_PUBLISHABLE_KEY = os.getenv('DJANGO_STRIPE_PUBLISHABLE_KEY', '')
